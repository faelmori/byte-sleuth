name: Orchestrate Full Release (PyPI, VSCode, GitHub)

on:
  push:
    tags:
      - 'v*'

jobs:
  set-version:
    if: github.actor == 'faelmori'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Extract version from tag
        id: extract_version
        run: |
          TAG=${GITHUB_REF_NAME#v}
          echo "version=$TAG" >> $GITHUB_OUTPUT
      - name: Replace __VERSION__ in package.json
        run: |
          sed -i "s/\"__VERSION__\"/\"${{ steps.extract_version.outputs.version }}\"/g" vscode-extension/package.json
      - name: Replace __VERSION__ in pyproject.toml
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ steps.extract_version.outputs.version }}\"/g" pyproject.toml
      - name: Replace __VERSION__ in __init__.py
        run: |
          sed -i "s/__version__ = \".*\"/__version__ = \"${{ steps.extract_version.outputs.version }}\"/g" byte_sleuth/__init__.py
      - name: Upload updated sources
        uses: actions/upload-artifact@v4
        with:
          name: updated-sources
          path: |
            vscode-extension/package.json
            pyproject.toml
            byte_sleuth/__init__.py

  publish-pypi:
    if: github.actor == 'faelmori'
    needs: set-version
    uses: ./.github/workflows/publish.yml
    with:
      tag: ${{ github.ref_name }}
    secrets: inherit

  publish-vscode:
    if: github.actor == 'faelmori'
    needs: publish-pypi
    uses: ./.github/workflows/publish-vscode-extension.yml
    with:
      tag: ${{ github.ref_name }}
    secrets: inherit

  gather-artifacts:
    if: github.actor == 'faelmori'
    needs: [publish-pypi, publish-vscode]
    runs-on: ubuntu-latest
    steps:
      - name: Download python dist
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: dist/
      - name: Download VSIX
        uses: actions/download-artifact@v4
        with:
          name: vscode-extension-vsix
          path: vsix/
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set outputs
        id: out
        run: |
          echo "python_dist=dist/*" >> $GITHUB_OUTPUT
          echo "vsix=vsix/*.vsix" >> $GITHUB_OUTPUT
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "${{ steps.changelog.outputs.changelog }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
    outputs:
      python_dist: ${{ steps.out.outputs.python_dist }}
      vsix: ${{ steps.out.outputs.vsix }}
      changelog: ${{ steps.out.outputs.changelog }}

  github-release:
    if: github.actor == 'faelmori'
    needs: gather-artifacts
    uses: ./.github/workflows/release.yml
    with:
      tag: ${{ github.ref_name }}
      changelog: ${{ needs.gather-artifacts.outputs.changelog }}
      python_dist: ${{ needs.gather-artifacts.outputs.python_dist }}
      vsix: ${{ needs.gather-artifacts.outputs.vsix }}
    secrets: inherit

  rollback:
    if: failure() && github.actor == 'faelmori'
    runs-on: ubuntu-latest
    steps:
      - name: Rollback (manual intervention required)
        run: |
          echo "Release failed. Please check PyPI, VSCode Marketplace, and GitHub for partial releases."
          echo "Manual cleanup may be required (ex: delete tag/release, unpublish extension, etc)."
